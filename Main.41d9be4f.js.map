{"version":3,"sources":["src/BaseElement.ts","src/YoutubeVideo.ts","src/ActionNetworkForm.ts","src/Main.ts"],"names":[],"mappings":"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","file":"Main.41d9be4f.js","sourceRoot":"..","sourcesContent":["export abstract class BaseElement extends HTMLElement {\n  constructor() {\n    super()\n    this.attachShadow({ mode: 'open' })\n    this.addStyles()\n  }\n\n  protected static styles: string = ''\n\n  protected abstract importAttributes(): void\n\n  public connectedCallback() {\n    this.importAttributes()\n  }\n\n  private addStyles() {\n    if ('adoptedStyleSheets' in this.shadowRoot!) {\n      const sheet = new CSSStyleSheet()\n      sheet.replaceSync((this.constructor as typeof BaseElement).styles)\n      this.shadowRoot!.adoptedStyleSheets = [sheet]\n    } else {\n      const node = document.createElement('style')\n      node.textContent = (this.constructor as typeof BaseElement).styles\n      this.shadowRoot!.appendChild(node)\n    }\n  }\n}","import { BaseElement } from './BaseElement'\n\nconst clamp = (min: number, max: number, value: number) => {\n  return Math.min(Math.max(min, value), max)\n}\n\ninterface HTMLElementTagNameMap {\n  'youtube-video': YoutubeVideo\n}\n\nclass YoutubeVideo extends BaseElement {\n  private videoId: string = ''\n  private startSeconds: number = 0\n  private endSeconds: number | null = null\n  private volume: number = 0\n  private controls: boolean = true\n  private modestBranding: boolean = false\n  private disableKeyboard: boolean = false\n  private autoplay: boolean = false\n  private container: HTMLDivElement = document.createElement('div')\n  private player?: YT.Player\n\n  protected importAttributes() {\n    this.videoId = this.getAttribute('video-id') || ''\n    this.startSeconds = parseInt(this.getAttribute('start-seconds') || '0') || 0\n    this.endSeconds = parseInt(this.getAttribute('end-seconds') || '') || null\n    this.controls = this.getAttribute('controls') !== 'false'\n    this.modestBranding = this.getAttribute('modest-branding') === 'true'\n    this.disableKeyboard = this.getAttribute('keyboard') === 'false'\n    this.autoplay = this.getAttribute('autoplay') === 'true'\n    this.volume = this.parseVolume(this.getAttribute('volume') || '100')\n  }\n\n  protected static styles = `\n    :host {\n        display: inline-block;\n        width: 644px;\n        height: 362px;\n        position: relative;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: 0;\n    }\n  `\n\n  public static get observedAttributes() {\n    return [\n      'volume',\n    ]\n  }\n\n  public attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ) {\n    switch (name) {\n      case 'volume':\n        if (oldValue === newValue) return\n        this.volume = this.parseVolume(newValue || '100')\n        this.player && this.player.setVolume(this.volume)\n        return\n      default:\n        return\n    }\n  }\n\n  public async connectedCallback() {\n    super.connectedCallback()\n    this.shadowRoot!.appendChild(this.container)\n    await this.loadYoutubeIframeApi()\n    this.player = await this.createPlayer()\n    this.loadRequestedVideo()\n    this.player.setVolume(this.volume)\n  }\n\n  private parseVolume(attrValue: string) {\n    const parsed = parseInt(attrValue)\n    return isNaN(parsed) ? 100 : clamp(0, 100, parsed)\n  }\n\n  private loadRequestedVideo() {\n    this.player!.loadVideoById({\n      videoId: this.videoId,\n      startSeconds: this.startSeconds,\n      endSeconds: this.endSeconds || undefined,\n      playerVars: {\n        autoplay: this.autoplay,\n        controls: this.controls ? 1 : 0,\n        modestbranding: this.modestBranding ? 1 : 0,\n        disablekb: this.disableKeyboard ? 1 : 0,\n      },\n    })\n  }\n\n  private loadYoutubeIframeApi(): Promise<void> {\n    return new Promise((resolve) => {\n      if (typeof YT === 'object' && YT !== null && YT.loaded === 1) {\n        resolve()\n        return\n      }\n\n      window.addEventListener('youtubeiframeapiready', () => {\n        resolve()\n      }, { once: true })\n\n      if (typeof window.onYouTubeIframeAPIReady !== 'function') {\n        window.onYouTubeIframeAPIReady = () => {\n          YT.ready(() => {\n            setTimeout(() => {\n              window.dispatchEvent(new CustomEvent('youtubeiframeapiready'))\n            })\n          })\n        }\n      }\n\n      if (document.getElementById('youtube-iframe-api') === null) {\n        const script = document.createElement('script')\n        script.src = 'https://www.youtube.com/iframe_api'\n        script.id = 'youtube-iframe-api'\n        script.async = true\n        document.head.appendChild(script)\n      }\n    })\n  }\n\n  private createPlayer(): Promise<YT.Player> {\n    return new Promise((resolve) => {\n      new YT.Player(this.container, {\n        videoId: this.videoId,\n        playerVars: {\n          controls: this.controls ? 1 : 0,\n        },\n        events: {\n          onReady: (e: CustomEvent) => resolve(e.target as YT.Player),\n          onStateChange: this.onChange,\n        }\n      })\n    })\n  }\n\n  private onChange = () => {\n    switch (this.player!.getPlayerState()) {\n      case YT.PlayerState.UNSTARTED:\n        this.setAttribute('player-state', 'unstarted')\n        return\n      case YT.PlayerState.PLAYING:\n        this.setAttribute('player-state', 'playing')\n        this.dispatchEvent(new CustomEvent('playing'))\n        return\n      case YT.PlayerState.ENDED:\n        this.setAttribute('player-state', 'ended')\n        this.dispatchEvent(new CustomEvent('ended'))\n        return\n      case YT.PlayerState.PAUSED:\n        this.dispatchEvent(new CustomEvent('paused'))\n      default:\n        return\n    }\n  }\n}\n\ncustomElements.define('youtube-video', YoutubeVideo)","import { BaseElement } from './BaseElement'\n\nclass ActionNetworkForm extends BaseElement {\n  protected importAttributes() {\n\n  }\n\n  protected static styles = `\n    :host {\n      display: block;\n      min-content;\n    }\n    iframe {\n      height: 100%;\n      width: 100%;\n      display: block;\n      border: 0;\n      background-color: white;\n    }\n  `\n\n  public connectedCallback() {\n    super.connectedCallback()\n    const iframe = document.createElement('iframe')\n    iframe.srcdoc = this.createIframeHtml()\n    this.shadowRoot!.append(iframe)\n  }\n\n  private createIframeHtml() {\n    return `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <meta charset=\"utf-8\" />\n          <style>\n            h2 { display: none; }\n          </style>\n        </head>\n        <body>\n          <script src=\"https://actionnetwork.org/widgets/v3/form/join-us-in-detroit-to-changethedebate?format=js&source=widget\"></script>\n          <div id=\"can-form-area-join-us-in-detroit-to-changethedebate\"></div>\n        </body>\n      </html>\n    `\n  }\n}\n\ncustomElements.define('action-network-form', ActionNetworkForm)","import './YoutubeVideo'\nimport './ActionNetworkForm'\n\nconst video = document.querySelector('youtube-video')!"]}